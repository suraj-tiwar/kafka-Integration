[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\s.tiwari\AppData\Local\Temp\idea8.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\s.tiwari\AppData\Local\Temp\idea8.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.8.2 (Oracle Corporation Java 1.8.0_202)
[debug]       Load.loadUnit: plugins took 184.9265ms
[debug]       Load.loadUnit: defsScala took 0.3823ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s.tiwari\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 16.6799 ms
[debug]           Load.resolveProject(global-plugins) took 40.5219ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\s.tiwari\.sbt\1.0\plugins, plugins: List(<none>))) took 80.4633ms
[debug] [Loading] Done in C:\Users\s.tiwari\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 104.6769ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.2421ms
[debug]     Load.loadUnit(file:/C:/Users/s.tiwari/.sbt/1.0/plugins/, ...) took 298.4763ms
[debug]   Load.apply: load took 432.9926ms
[debug]   Load.apply: resolveProjects took 5.598ms
[debug]   Load.apply: finalTransforms took 51.2066ms
[debug]   Load.apply: config.delegates took 8.2236ms
[debug]   Load.apply: Def.make(settings)... took 389.728ms
[debug]   Load.apply: structureIndex took 103.3946ms
[debug]   Load.apply: mkStreams took 2.208ms
[info] loading global plugins from C:\Users\s.tiwari\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2259.6612ms
[debug]           Load.loadUnit: plugins took 51.0981ms
[debug]           Load.loadUnit: defsScala took 0.0065ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration\project
[debug]             Load.loadUnit: mkEval took 10.138ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.1599 ms
[info] loading settings for project kafkastormintegration-build from plugins.sbt,idea8.sbt ...
[debug]               Load.resolveProject(kafkastormintegration-build) took 2.9936ms
[debug]             Load.loadTransitive: finalizeProject(Project(id kafkastormintegration-build, base: C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration\project, plugins: List(<none>))) took 6.9728ms
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration\project, returning: (kafkastormintegration-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2511.8369ms
[debug]           Load.loadUnit: cleanEvalClasses took 5.196ms
[debug]         Load.loadUnit(file:/C:/Users/s.tiwari/IdeaProjects/KafkaStormIntegration/project/, ...) took 2569.7704ms
[debug]       Load.apply: load took 2571.5054ms
[debug]       Load.apply: resolveProjects took 0.1673ms
[debug]       Load.apply: finalTransforms took 8.1595ms
[debug]       Load.apply: config.delegates took 0.6278ms
[debug]       Load.apply: Def.make(settings)... took 89.4621ms
[debug]       Load.apply: structureIndex took 34.8747ms
[debug]       Load.apply: mkStreams took 0.0044ms
[info] loading project definition from C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 4561.012ms
[debug]     Load.loadUnit: defsScala took 0.0031ms
[debug] [Loading] Scanning directory C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration
[debug]       Load.loadUnit: mkEval took 0.5188ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbtassembly.AssemblyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbtassembly.AssemblyPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,sbtassembly.AssemblyPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 4.9614 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 31.2665ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration, plugins: List(<none>))) took 38.4839ms
[debug] [Loading] Done in C:\Users\s.tiwari\IdeaProjects\KafkaStormIntegration, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 2234.5027ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.6211ms
[debug]   Load.loadUnit(file:/C:/Users/s.tiwari/IdeaProjects/KafkaStormIntegration/, ...) took 6815.5016ms
[debug] Load.apply: load took 6817.7461ms
[debug] Load.apply: resolveProjects took 0.1222ms
[debug] Load.apply: finalTransforms took 22.9098ms
[debug] Load.apply: config.delegates took 0.352ms
[debug] Load.apply: Def.make(settings)... took 73.5747ms
[debug] Load.apply: structureIndex took 25.5117ms
[debug] Load.apply: mkStreams took 0.0036ms
[info] set current project to KafkaStormIntegration (in build file:/C:/Users/s.tiwari/IdeaProjects/KafkaStormIntegration/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 60625 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 60625, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to KafkaStormIntegration (in build file:/C:/Users/s.tiwari/IdeaProjects/KafkaStormIntegration/)
[debug] > Exec(idea-shell, None, None)
